version: "3"

networks:
  filmscanner:
    driver: bridge
  ui:

volumes:
  db-filmscanner:

services:
  postgres:
    image: postgres:13
    hostname: postgres
    restart: unless-stopped
    container_name: filmscanner.db
    environment:
      POSTGRES_DB: filmscanner
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - 5442:5432
    volumes:
      - db-filmscanner:/var/lib/postgresql/data
    networks:
      - filmscanner
  filmscanner-api:
    build:
      context: .
      dockerfile: FilmScanner\Dockerfile
    links:
      - postgres
    networks:
      - filmscanner
      - ui
    container_name: filmscanner.api
    environment:
      DB_CONNECTION_STRING: ${DB_CONNECTION_STRING}
      OMDB_API_KEY: ${OMDB_API_KEY}
    ports:
      - 4040:80
    depends_on:
      - postgres
  ui:
    build:
      context: .
      dockerfile: FilmScanner.ClientApp\Dockerfile
    container_name: filmscanner.ui
    ports: 
      - 4200:4200
    networks:
      - ui
    depends_on:
      - filmscanner-api